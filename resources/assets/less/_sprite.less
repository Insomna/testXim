/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@checkbox-name: 'checkbox';
@checkbox-x: 29px;
@checkbox-y: 32px;
@checkbox-offset-x: -29px;
@checkbox-offset-y: -32px;
@checkbox-width: 12px;
@checkbox-height: 10px;
@checkbox-total-width: 120px;
@checkbox-total-height: 50px;
@checkbox-image: 'sprite-bitmap.png';
@checkbox: 29px 32px -29px -32px 12px 10px 120px 50px 'sprite-bitmap.png' 'checkbox';
@logo-name: 'logo';
@logo-x: 0px;
@logo-y: 0px;
@logo-offset-x: 0px;
@logo-offset-y: 0px;
@logo-width: 120px;
@logo-height: 32px;
@logo-total-width: 120px;
@logo-total-height: 50px;
@logo-image: 'sprite-bitmap.png';
@logo: 0px 0px 0px 0px 120px 32px 120px 50px 'sprite-bitmap.png' 'logo';
@search-name: 'search';
@search-x: 0px;
@search-y: 32px;
@search-offset-x: 0px;
@search-offset-y: -32px;
@search-width: 18px;
@search-height: 18px;
@search-total-width: 120px;
@search-total-height: 50px;
@search-image: 'sprite-bitmap.png';
@search: 0px 32px 0px -32px 18px 18px 120px 50px 'sprite-bitmap.png' 'search';
@tag-delete-name: 'tag-delete';
@tag-delete-x: 18px;
@tag-delete-y: 32px;
@tag-delete-offset-x: -18px;
@tag-delete-offset-y: -32px;
@tag-delete-width: 11px;
@tag-delete-height: 11px;
@tag-delete-total-width: 120px;
@tag-delete-total-height: 50px;
@tag-delete-image: 'sprite-bitmap.png';
@tag-delete: 18px 32px -18px -32px 11px 11px 120px 50px 'sprite-bitmap.png' 'tag-delete';
@checkbox-2x-name: 'checkbox-2x';
@checkbox-2x-x: 58px;
@checkbox-2x-y: 64px;
@checkbox-2x-offset-x: -58px;
@checkbox-2x-offset-y: -64px;
@checkbox-2x-width: 24px;
@checkbox-2x-height: 20px;
@checkbox-2x-total-width: 240px;
@checkbox-2x-total-height: 100px;
@checkbox-2x-image: 'sprite-bitmap-2x.png';
@checkbox-2x: 58px 64px -58px -64px 24px 20px 240px 100px 'sprite-bitmap-2x.png' 'checkbox-2x';
@logo-2x-name: 'logo-2x';
@logo-2x-x: 0px;
@logo-2x-y: 0px;
@logo-2x-offset-x: 0px;
@logo-2x-offset-y: 0px;
@logo-2x-width: 240px;
@logo-2x-height: 64px;
@logo-2x-total-width: 240px;
@logo-2x-total-height: 100px;
@logo-2x-image: 'sprite-bitmap-2x.png';
@logo-2x: 0px 0px 0px 0px 240px 64px 240px 100px 'sprite-bitmap-2x.png' 'logo-2x';
@search-2x-name: 'search-2x';
@search-2x-x: 0px;
@search-2x-y: 64px;
@search-2x-offset-x: 0px;
@search-2x-offset-y: -64px;
@search-2x-width: 36px;
@search-2x-height: 36px;
@search-2x-total-width: 240px;
@search-2x-total-height: 100px;
@search-2x-image: 'sprite-bitmap-2x.png';
@search-2x: 0px 64px 0px -64px 36px 36px 240px 100px 'sprite-bitmap-2x.png' 'search-2x';
@tag-delete-2x-name: 'tag-delete-2x';
@tag-delete-2x-x: 36px;
@tag-delete-2x-y: 64px;
@tag-delete-2x-offset-x: -36px;
@tag-delete-2x-offset-y: -64px;
@tag-delete-2x-width: 22px;
@tag-delete-2x-height: 22px;
@tag-delete-2x-total-width: 240px;
@tag-delete-2x-total-height: 100px;
@tag-delete-2x-image: 'sprite-bitmap-2x.png';
@tag-delete-2x: 36px 64px -36px -64px 22px 22px 240px 100px 'sprite-bitmap-2x.png' 'tag-delete-2x';
@spritesheet-width: 120px;
@spritesheet-height: 50px;
@spritesheet-image: 'sprite-bitmap.png';
@spritesheet-sprites: @checkbox @logo @search @tag-delete;
@spritesheet: 120px 50px 'sprite-bitmap.png' @spritesheet-sprites;
@retina-spritesheet-width: 240px;
@retina-spritesheet-height: 100px;
@retina-spritesheet-image: 'sprite-bitmap-2x.png';
@retina-spritesheet-sprites: @checkbox-2x @logo-2x @search-2x @tag-delete-2x;
@retina-spritesheet: 240px 100px 'sprite-bitmap-2x.png' @retina-spritesheet-sprites;

/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.
*/
@checkbox-group-name: 'checkbox';
@checkbox-group: 'checkbox' @checkbox @checkbox-2x;
@logo-group-name: 'logo';
@logo-group: 'logo' @logo @logo-2x;
@search-group-name: 'search';
@search-group: 'search' @search @search-2x;
@tag-delete-group-name: 'tag-delete';
@tag-delete-group: 'tag-delete' @tag-delete @tag-delete-2x;
@retina-groups: @checkbox-group @logo-group @search-group @tag-delete-group;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `retina-sprite` class sets up rules and a media query for a sprite/retina sprite.
  It should be used with a "retina group" variable.

The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/

@icon-home-group: 'icon-home' @icon-home @icon-home-2x;

.icon-home {
  .retina-sprite(@icon-home-group);
}
*/
.sprite-background-size(@sprite) {
  @sprite-total-width: extract(@sprite, 7);
  @sprite-total-height: extract(@sprite, 8);
  background-size: @sprite-total-width @sprite-total-height;
}

.retina-sprite(@retina-group) {
  @normal-sprite: extract(@retina-group, 2);
  @retina-sprite: extract(@retina-group, 3);
  .sprite(@normal-sprite);

  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    .sprite-image(@retina-sprite);
    .sprite-background-size(@normal-sprite);
  }
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}

/*
The `.retina-sprites` mixin generates a CSS rule and media query for retina groups
  This yields the same output as CSS retina template but can be overridden in LESS

.retina-sprites(@retina-groups);
*/
.retina-sprites(@retina-groups, @i: 1) when (@i <= length(@retina-groups)) {
  @retina-group: extract(@retina-groups, @i);
  @sprite-name: e(extract(@retina-group, 1));
  .@{sprite-name} {
    .retina-sprite(@retina-group);
  }
  .retina-sprites(@retina-groups, @i + 1);
}
